import os
from io import BytesIO
from datetime import datetime
from django.conf import settings
from reportlab.lib.pagesizes import letter
from reportlab.lib import colors
from reportlab.pdfgen import canvas
from reportlab.platypus import Table, TableStyle
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle


def generate_requisition_pdf(requisition):
    buffer = BytesIO()
    p = canvas.Canvas(buffer, pagesize=letter)
    width, height = letter

    # Paths
    logo_path = os.path.join(settings.BASE_DIR, 'staticfiles', 'uach_logo.png')

    # Margins
    margin_left = 50
    margin_top = height - 50

    # Header
    p.setFont("Helvetica-Bold", 14)
    p.drawString(margin_left, margin_top, "Integrated Purchasing System - Fing")
    p.setFont("Helvetica", 12)
    p.drawString(margin_left, margin_top - 20, "Autonomous University of Chihuahua – Requisition")

    # Logo
    if os.path.exists(logo_path):
        p.drawImage(
            logo_path, x=500, y=height - 80,
            width=100, height=50, preserveAspectRatio=True, mask='auto'
        )

    # Line
    p.line(margin_left, margin_top - 60, width - margin_left, margin_top - 60)

    y = margin_top - 80
    line_height = 16

    # Requisition header info
    p.setFont("Helvetica-Bold", 12)
    p.drawString(margin_left, y, f"Requisition No. {requisition.id} - Registration Information")
    y -= line_height * 2

    p.setFont("Helvetica", 10)
    fields = [
        ("Administrative Unit", requisition.administrative_unit),
        ("Requesting Department", str(requisition.requesting_department)),
        ("Project", str(requisition.project)),
        ("Funding Source", str(requisition.funding_source)),
        ("Budget Unit", str(requisition.budget_unit)),
        ("Agreements", str(requisition.agreement)),
        ("Category", str(requisition.category)),
        ("Date", requisition.created_at.strftime("%d/%b/%Y")),
        ("Requisition Reason", requisition.requisition_reason),
        ("External / Academic Service", str(requisition.external_service)),
        ("Bidding", str(requisition.tender)),
        ("Requester", requisition.user.full_name),
    ]
    for label, value in fields:
        p.drawString(margin_left, y, f"{label}: {value}")
        y -= line_height

    y -= line_height

    # Table data
    items_data = [['Expense Object', 'Quantity', 'Unit', 'Description']]
    for item in requisition.items.all():
        items_data.append([
            item.product.expense_object.name,
            str(item.quantity),
            item.unit.name,
            item.description
        ])

    table = Table(items_data, colWidths=[150, 60, 60, 210])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.lightblue),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (1, 1), (-1, -1), 'CENTER'),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, 0), 10),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 6),
        ('GRID', (0, 0), (-1, -1), 1, colors.black),
    ]))

    table_width, table_height = table.wrap(0, 0)
    table_y = y - table_height
    table.drawOn(p, margin_left, table_y)
    y = table_y - line_height * 2

    # Signatures
    p.setFont("Helvetica-Bold", 12)
    p.drawString(margin_left, y, "Signatures:")
    y -= line_height * 1.5

    sig_labels = [
        "Requested by:",
        "Reviewed by: M.I. Arion Ehecatl Juárez Menchaca",
        "Authorized by: M.I. Adrián Isaac Orpinel Uren"
    ]
    p.setFont("Helvetica", 10)
    for label in sig_labels:
        p.drawString(margin_left, y, label)
        p.line(margin_left + 120, y - 3, margin_left + 350, y - 3)
        y -= line_height * 2

    # Address block
    address_lines = [
        "FACULTAD DE INGENIERÍA",
        "Circuito No. 1, Campus Universitario 2",
        "Chihuahua, Chih. México. C.P. 31125",
        "Tel. (614) 442-95-00",
        "www.uach.mx/fing"
    ]
    p.setFont("Helvetica", 9)
    for i, line in enumerate(address_lines):
        p.drawString(50, 110 - i * 12, line)

    # Footer
    footer_text = f"Generated by {requisition.user.full_name} - {requisition.administrative_unit}"
    print_date = datetime.now().strftime("%d/%b/%Y %H:%M")
    p.setFont("Helvetica-Oblique", 8)
    p.drawString(margin_left, 40, footer_text)
    p.drawRightString(width - margin_left, 40, f"Print date: {print_date}")

    p.showPage()
    p.save()
    buffer.seek(0)
    return buffer
